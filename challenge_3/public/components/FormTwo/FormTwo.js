class FormTwo extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      line_1: '',
      line_2: '',
      city: '',
      state: '',
      zip_code: '',
      phone_number: ''
    };
  }

  handleChange(e) {
    this.setState({
      [e.target.id]: e.target.value
    });
  }

  handleClick() {
    var data = this.state;
    this.props.handleFormTwo(data);
  }

  render() {
    const {
      line_1,
      line_2,
      city,
      state,
      zip_code,
      phone_number
    } = this.state;
    return React.createElement("div", null, React.createElement("div", null, React.createElement("label", {
      htmlFor: "Address"
    }, "Address "), React.createElement("input", {
      type: "line_1",
      name: "line_1",
      id: "line_1",
      onChange: this.handleChange.bind(this),
      placeholder: "Enter Address line 1",
      required: true
    }), React.createElement("input", {
      type: "line_2",
      name: "line_2",
      id: "line_2",
      onChange: this.handleChange.bind(this),
      placeholder: "Enter Address line 2",
      required: true
    })), React.createElement("div", null, React.createElement("label", {
      htmlFor: "city"
    }, "City"), React.createElement("input", {
      type: "city",
      name: "city",
      id: "city",
      onChange: this.handleChange.bind(this),
      placeholder: "Enter city name",
      required: true
    })), React.createElement("div", null, React.createElement("label", {
      htmlFor: "state"
    }, "State"), React.createElement("input", {
      type: "state",
      name: "state",
      id: "state",
      onChange: this.handleChange.bind(this),
      placeholder: "Enter state"
    })), React.createElement("div", null, React.createElement("label", {
      htmlFor: "zip_code"
    }, "Zip Code"), React.createElement("input", {
      type: "zip_code",
      name: "zip_code",
      id: "zip_code",
      onChange: this.handleChange.bind(this),
      placeholder: "Enter Zip Code"
    })), React.createElement("div", null, React.createElement("label", {
      htmlFor: "phone_number"
    }, "Phone Number"), React.createElement("input", {
      type: "phone_number",
      name: "phone_number",
      id: "phone_number",
      onChange: this.handleChange.bind(this),
      placeholder: "Enter Phone Number"
    })), React.createElement("div", null, React.createElement("button", {
      type: "submit",
      onClick: this.handleClick.bind(this)
    }, "Submit")));
  }

}

window.FormTwo = FormTwo;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9jb21wb25lbnRzL0Zvcm1Ud28vRm9ybVR3by5qc3giXSwibmFtZXMiOlsiRm9ybVR3byIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwibGluZV8xIiwibGluZV8yIiwiY2l0eSIsInppcF9jb2RlIiwicGhvbmVfbnVtYmVyIiwiaGFuZGxlQ2hhbmdlIiwiZSIsInNldFN0YXRlIiwidGFyZ2V0IiwiaWQiLCJ2YWx1ZSIsImhhbmRsZUNsaWNrIiwiZGF0YSIsImhhbmRsZUZvcm1Ud28iLCJyZW5kZXIiLCJiaW5kIiwid2luZG93Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFOLFNBQXNCQyxLQUFLLENBQUNDLFNBQTVCLENBQXNDO0FBQ2xDQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNmLFVBQU1BLEtBQU47QUFDQSxTQUFLQyxLQUFMLEdBQWE7QUFDVEMsTUFBQUEsTUFBTSxFQUFFLEVBREM7QUFFVEMsTUFBQUEsTUFBTSxFQUFFLEVBRkM7QUFHVEMsTUFBQUEsSUFBSSxFQUFFLEVBSEc7QUFJVEgsTUFBQUEsS0FBSyxFQUFFLEVBSkU7QUFLVEksTUFBQUEsUUFBUSxFQUFFLEVBTEQ7QUFNVEMsTUFBQUEsWUFBWSxFQUFFO0FBTkwsS0FBYjtBQVFIOztBQUNEQyxFQUFBQSxZQUFZLENBQUNDLENBQUQsRUFBSTtBQUNaLFNBQUtDLFFBQUwsQ0FBYztBQUNWLE9BQUNELENBQUMsQ0FBQ0UsTUFBRixDQUFTQyxFQUFWLEdBQWVILENBQUMsQ0FBQ0UsTUFBRixDQUFTRTtBQURkLEtBQWQ7QUFHSDs7QUFFREMsRUFBQUEsV0FBVyxHQUFHO0FBQ1YsUUFBSUMsSUFBSSxHQUFHLEtBQUtiLEtBQWhCO0FBQ0EsU0FBS0QsS0FBTCxDQUFXZSxhQUFYLENBQXlCRCxJQUF6QjtBQUNIOztBQUNERSxFQUFBQSxNQUFNLEdBQUc7QUFDTCxVQUFNO0FBQUVkLE1BQUFBLE1BQUY7QUFBVUMsTUFBQUEsTUFBVjtBQUFrQkMsTUFBQUEsSUFBbEI7QUFBd0JILE1BQUFBLEtBQXhCO0FBQStCSSxNQUFBQSxRQUEvQjtBQUF5Q0MsTUFBQUE7QUFBekMsUUFBMEQsS0FBS0wsS0FBckU7QUFDQSxXQUNJLGlDQUVJLGlDQUNJO0FBQU8sTUFBQSxPQUFPLEVBQUM7QUFBZixrQkFESixFQUVJO0FBQU8sTUFBQSxJQUFJLEVBQUMsUUFBWjtBQUFxQixNQUFBLElBQUksRUFBQyxRQUExQjtBQUFtQyxNQUFBLEVBQUUsRUFBQyxRQUF0QztBQUErQyxNQUFBLFFBQVEsRUFBRSxLQUFLTSxZQUFMLENBQWtCVSxJQUFsQixDQUF1QixJQUF2QixDQUF6RDtBQUF1RixNQUFBLFdBQVcsRUFBQyxzQkFBbkc7QUFBMEgsTUFBQSxRQUFRO0FBQWxJLE1BRkosRUFHSTtBQUFPLE1BQUEsSUFBSSxFQUFDLFFBQVo7QUFBcUIsTUFBQSxJQUFJLEVBQUMsUUFBMUI7QUFBbUMsTUFBQSxFQUFFLEVBQUMsUUFBdEM7QUFBK0MsTUFBQSxRQUFRLEVBQUUsS0FBS1YsWUFBTCxDQUFrQlUsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBekQ7QUFBdUYsTUFBQSxXQUFXLEVBQUMsc0JBQW5HO0FBQTBILE1BQUEsUUFBUTtBQUFsSSxNQUhKLENBRkosRUFRSSxpQ0FDSTtBQUFPLE1BQUEsT0FBTyxFQUFDO0FBQWYsY0FESixFQUVJO0FBQU8sTUFBQSxJQUFJLEVBQUMsTUFBWjtBQUFtQixNQUFBLElBQUksRUFBQyxNQUF4QjtBQUErQixNQUFBLEVBQUUsRUFBQyxNQUFsQztBQUF5QyxNQUFBLFFBQVEsRUFBRSxLQUFLVixZQUFMLENBQWtCVSxJQUFsQixDQUF1QixJQUF2QixDQUFuRDtBQUFpRixNQUFBLFdBQVcsRUFBQyxpQkFBN0Y7QUFBK0csTUFBQSxRQUFRO0FBQXZILE1BRkosQ0FSSixFQWFJLGlDQUNJO0FBQU8sTUFBQSxPQUFPLEVBQUM7QUFBZixlQURKLEVBRUk7QUFBTyxNQUFBLElBQUksRUFBQyxPQUFaO0FBQW9CLE1BQUEsSUFBSSxFQUFDLE9BQXpCO0FBQWlDLE1BQUEsRUFBRSxFQUFDLE9BQXBDO0FBQTRDLE1BQUEsUUFBUSxFQUFFLEtBQUtWLFlBQUwsQ0FBa0JVLElBQWxCLENBQXVCLElBQXZCLENBQXREO0FBQW9GLE1BQUEsV0FBVyxFQUFDO0FBQWhHLE1BRkosQ0FiSixFQWtCSSxpQ0FDSTtBQUFPLE1BQUEsT0FBTyxFQUFDO0FBQWYsa0JBREosRUFFSTtBQUFPLE1BQUEsSUFBSSxFQUFDLFVBQVo7QUFBdUIsTUFBQSxJQUFJLEVBQUMsVUFBNUI7QUFBdUMsTUFBQSxFQUFFLEVBQUMsVUFBMUM7QUFBcUQsTUFBQSxRQUFRLEVBQUUsS0FBS1YsWUFBTCxDQUFrQlUsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBL0Q7QUFBNkYsTUFBQSxXQUFXLEVBQUM7QUFBekcsTUFGSixDQWxCSixFQXVCSSxpQ0FDSTtBQUFPLE1BQUEsT0FBTyxFQUFDO0FBQWYsc0JBREosRUFFSTtBQUFPLE1BQUEsSUFBSSxFQUFDLGNBQVo7QUFBMkIsTUFBQSxJQUFJLEVBQUMsY0FBaEM7QUFBK0MsTUFBQSxFQUFFLEVBQUMsY0FBbEQ7QUFBaUUsTUFBQSxRQUFRLEVBQUUsS0FBS1YsWUFBTCxDQUFrQlUsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBM0U7QUFBeUcsTUFBQSxXQUFXLEVBQUM7QUFBckgsTUFGSixDQXZCSixFQTRCSSxpQ0FDSTtBQUFRLE1BQUEsSUFBSSxFQUFDLFFBQWI7QUFBc0IsTUFBQSxPQUFPLEVBQUUsS0FBS0osV0FBTCxDQUFpQkksSUFBakIsQ0FBc0IsSUFBdEI7QUFBL0IsZ0JBREosQ0E1QkosQ0FESjtBQWtDSDs7QUExRGlDOztBQTREdENDLE1BQU0sQ0FBQ3RCLE9BQVAsR0FBaUJBLE9BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRm9ybVR3byBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICAgICAgICBsaW5lXzE6ICcnLCBcclxuICAgICAgICAgICAgbGluZV8yOiAnJywgXHJcbiAgICAgICAgICAgIGNpdHk6ICcnLCBcclxuICAgICAgICAgICAgc3RhdGU6ICcnLCBcclxuICAgICAgICAgICAgemlwX2NvZGU6ICcnLCBcclxuICAgICAgICAgICAgcGhvbmVfbnVtYmVyOiAnJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBoYW5kbGVDaGFuZ2UoZSkge1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBbZS50YXJnZXQuaWRdOiBlLnRhcmdldC52YWx1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGhhbmRsZUNsaWNrKCkge1xyXG4gICAgICAgIHZhciBkYXRhID0gdGhpcy5zdGF0ZTtcclxuICAgICAgICB0aGlzLnByb3BzLmhhbmRsZUZvcm1Ud28oZGF0YSk7XHJcbiAgICB9XHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgY29uc3QgeyBsaW5lXzEsIGxpbmVfMiwgY2l0eSwgc3RhdGUsIHppcF9jb2RlLCBwaG9uZV9udW1iZXIgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGRpdj5cclxuXHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiQWRkcmVzc1wiPkFkZHJlc3MgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImxpbmVfMVwiIG5hbWU9XCJsaW5lXzFcIiBpZD1cImxpbmVfMVwiIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZS5iaW5kKHRoaXMpfSBwbGFjZWhvbGRlcj1cIkVudGVyIEFkZHJlc3MgbGluZSAxXCIgcmVxdWlyZWQgLz5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImxpbmVfMlwiIG5hbWU9XCJsaW5lXzJcIiBpZD1cImxpbmVfMlwiIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZS5iaW5kKHRoaXMpfSBwbGFjZWhvbGRlcj1cIkVudGVyIEFkZHJlc3MgbGluZSAyXCIgcmVxdWlyZWQgLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJjaXR5XCI+Q2l0eTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaXR5XCIgbmFtZT1cImNpdHlcIiBpZD1cImNpdHlcIiBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKX0gcGxhY2Vob2xkZXI9XCJFbnRlciBjaXR5IG5hbWVcIiByZXF1aXJlZCAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInN0YXRlXCI+U3RhdGU8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwic3RhdGVcIiBuYW1lPVwic3RhdGVcIiBpZD1cInN0YXRlXCIgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlLmJpbmQodGhpcyl9IHBsYWNlaG9sZGVyPVwiRW50ZXIgc3RhdGVcIiAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInppcF9jb2RlXCI+WmlwIENvZGU8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiemlwX2NvZGVcIiBuYW1lPVwiemlwX2NvZGVcIiBpZD1cInppcF9jb2RlXCIgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlLmJpbmQodGhpcyl9IHBsYWNlaG9sZGVyPVwiRW50ZXIgWmlwIENvZGVcIiAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInBob25lX251bWJlclwiPlBob25lIE51bWJlcjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJwaG9uZV9udW1iZXJcIiBuYW1lPVwicGhvbmVfbnVtYmVyXCIgaWQ9XCJwaG9uZV9udW1iZXJcIiBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKX0gcGxhY2Vob2xkZXI9XCJFbnRlciBQaG9uZSBOdW1iZXJcIiAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyl9PlN1Ym1pdDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIClcclxuICAgIH1cclxufVxyXG53aW5kb3cuRm9ybVR3byA9IEZvcm1Ud287Il19